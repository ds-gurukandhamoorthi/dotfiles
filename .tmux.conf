set -g status off
#As in ratpoison (showing time with dmesg), the status bar is shown briefly
bind a run-shell "tmux set-option status on; sleep 2; tmux set-option status off;"

# # To set transparent status bar
# set -g status-bg default
# # By setting only current windows style bg to transparent (default) we can get a tab-like appearance.

# This could really slow down : just try escape-time 5000 to see how long it takes for vim to exit from insert mode using escape
# By setting escape-time to 0 we wouldn't be able to type things like Escape then Arrow (M-Arrow) to resize. But Alt+Arrow would function
set -s escape-time 0


# As in Lxterminal  (When we open a new tab it has the same directory)
# Minor Bug: if we execute `man ...` then without closing the manual we split then the new window is opened with /usr/share/man
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c  "#{pane_current_path}"
bind c new-window -c  "#{pane_current_path}"

bind C-r source-file ~/.tmux.conf

# Vim-like but recursive (we can type ^b and then hjkl in succession to go where we want)
bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# With arrows sometimes it's counter-intuitive to have recursive... (Example: We want to move to the console above then we want to got the previous command using up... With recursive we wouldn't get what we wanted) (With h, j, k, l  the scenario is different :if we type two l l we know the first l is direction and the second l is the start of a command so there would be a reasonable delay)
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R



bind C-l last-window


set -g default-terminal "screen-256color"

set-window-option -g mode-keys vi

bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -i -selection clipboard"
bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -sel clip -i"
bind -T copy-mode-vi r send-keys -X rectangle-toggle

# # to force us to remember semi-colon (which is more appropriate for switching between two)
# # o command has also has the disadvantage that if ctrl was still pressed, it shifts everything around (rotate panes in the window)
# unbind o
